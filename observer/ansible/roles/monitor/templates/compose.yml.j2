services:
  prometheus:
    image: prom/prometheus
    ports:
      - "{{ prometheus.port }}:9090"
    volumes:
      - {{ monitor.dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always
  grafana:
    image: grafana/grafana
    ports:
      - "{{ grafana.port }}:3000"
    volumes:
      - grafana:/var/lib/grafana
      - {{ monitor.dir }}/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - {{ monitor.dir }}/grafana/dashboard.yml:/etc/grafana/provisioning/dashboards/dashborad.yml
      - {{ monitor.dir }}/grafana/isucon.json:/var/lib/grafana/dashboards/isucon.json
      - {{ monitor.dir }}/grafana/log.json:/var/lib/grafana/dashboards/log.json
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel

  mimir-lb:
    image: nginx:latest
    ports:
      - "{{ nginx.port }}:{{ nginx.port }}"
    volumes:
      - {{ monitor.dir }}/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

  mimir:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir
    depends_on:
      - minio
    volumes:
      - {{ monitor.dir }}/mimir/config.yml:/etc/mimir.yaml
      - mimir-data:/data
    expose:
      - "8080"
    restart: always

  mimir2:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir2
    depends_on:
      - minio
    volumes:
      - {{ monitor.dir }}/mimir/config.yml:/etc/mimir.yaml
      - mimir2-data:/data
    expose:
      - "8080"
    restart: always

  mimir3:
    image: grafana/mimir:latest
    command: ["-config.file=/etc/mimir.yaml"]
    hostname: mimir3
    depends_on:
      - minio
    volumes:
      - {{ monitor.dir }}/mimir/config.yml:/etc/mimir.yaml
      - mimir3-data:/data
    expose:
      - "8080"
    restart: always

  loki:
    image: grafana/loki:latest
    ports:
      - "{{ loki.port }}:3100"
    command: -config.file=/etc/loki/local-config.yaml
    restart: always

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: {{ minio.access_key }}
      MINIO_SECRET_KEY: {{ minio.secret_key }}
    entrypoint: [""]
    command: ["sh", "-c", "mkdir -p /data/mimir && minio server --quiet /data"]
    volumes:
      - minio-data:/data

#ポートフォワーディング用のコンテナ
  {% for server in servers %}
{{ server.id }}:
    image: ghcr.io/reactive-futakotamagawa/isu-isu-h/tunnel:latest
    volumes:
      - {{ monitor.dir }}/tunnel/config:/etc/ssh/ssh_config:ro
      - {{ monitor.dir }}/tunnel/.ssh:/root/.ssh/:ro
    command: -N {{ server.id }}
    restart: always
  {% endfor %}

volumes:
  grafana:
  mimir-data:
  mimir2-data:
  mimir3-data:
  minio-data:
